.service-item {
  $areas: img, content, buttons;
  @each $area in $areas {
    &__#{$area} {
      grid-area: #{$area};
    }
  }

  &__num {
    @include body-secondary;
    grid-area: num;
    contain: $color__font_dark--secondary;
    @include breakpoint ($tablet__portrait) {
      display: none;
    }
    @include breakpoint ($phone__all) {
      display: none;
    }
  }

  &__wrap {
    display: grid;

    padding: 32px 0;

    grid: {
      column-gap: 58px;
      template: {
        columns: 1fr 10fr 1fr;
        areas: 'num content buttons';
      };
    }

    @include breakpoint ($tablet__portrait) {
      grid: {
        row-gap: 32px;
        template: {
          columns: 4fr 2fr;
          areas: 'content buttons' ;
        };
      }
    }

    @include breakpoint ($phone__all) {
      flex-direction: column;

      display: flex;
    }
  }

  &__img {
    @include image-wrap-animation;
    display: none;
    width: 326px;
    height: 245px;
    overflow: hidden;

    border-radius: 4px;

    @include breakpoint ($tablet__portrait) {
      width: 100%;
    }
    @include breakpoint ($phone__all) {
      width: 100%;

      margin-bottom: 32px;
    }
  }

  &__content {
    flex-direction: column;
    justify-content: flex-start;

    display: flex;

    a {
      margin-top: auto;
      @include breakpoint ($tablet__portrait) {
        margin-top: 24px;
      }
    }

    &-buttons {
      justify-self: end;
      @include breakpoint ($phone__all) {
        display: none;
      }
    }
  }

  &__description {
    @include body-secondary;
    max-width: 310px;

    margin-top: 24px;
    margin-bottom: 62px;
    @include breakpoint ($phone__all) {
      margin-top: 12px;
      margin-bottom: 32px;
    }
  }

  &__btn-open {

    @include size(44px);
    position: relative;

    border-radius: 50%;

    background-color: $color__dark;

    color: $color__light;
    font-size: 20px;

    cursor: pointer;

    transition: all ease .2s;
    justify-self: end;

    &:hover {
      transform: scale(1.1);
    }

    &:after {
      @include pseudoElement(26px,'Plus.svg');
      filter: invert(1);

      top: calc(50%);
      left: 50%;

      color: $color__light;

      transform: translate(-50%, -50%);
    }


  }
}
